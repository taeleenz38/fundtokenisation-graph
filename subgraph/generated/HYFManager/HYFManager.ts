// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AssetSenderSet extends ethereum.Event {
  get params(): AssetSenderSet__Params {
    return new AssetSenderSet__Params(this);
  }
}

export class AssetSenderSet__Params {
  _event: AssetSenderSet;

  constructor(event: AssetSenderSet) {
    this._event = event;
  }

  get oldAssetSender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAssetSender(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ClaimableTimestampSet extends ethereum.Event {
  get params(): ClaimableTimestampSet__Params {
    return new ClaimableTimestampSet__Params(this);
  }
}

export class ClaimableTimestampSet__Params {
  _event: ClaimableTimestampSet;

  constructor(event: ClaimableTimestampSet) {
    this._event = event;
  }

  get claimTimestamp(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get depositId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class DepositProofAdded extends ethereum.Event {
  get params(): DepositProofAdded__Params {
    return new DepositProofAdded__Params(this);
  }
}

export class DepositProofAdded__Params {
  _event: DepositProofAdded;

  constructor(event: DepositProofAdded) {
    this._event = event;
  }

  get txHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get depositAmountAfterFee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get feeAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class DepositorOverwritten extends ethereum.Event {
  get params(): DepositorOverwritten__Params {
    return new DepositorOverwritten__Params(this);
  }
}

export class DepositorOverwritten__Params {
  _event: DepositorOverwritten;

  constructor(event: DepositorOverwritten) {
    this._event = event;
  }

  get depositId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get oldDepositor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newDepositor(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get oldPriceId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get newPriceId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get oldDepositAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get newDepositAmount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class FeeRecipientSet extends ethereum.Event {
  get params(): FeeRecipientSet__Params {
    return new FeeRecipientSet__Params(this);
  }
}

export class FeeRecipientSet__Params {
  _event: FeeRecipientSet;

  constructor(event: FeeRecipientSet) {
    this._event = event;
  }

  get oldFeeRecipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newFeeRecipient(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MinimumDepositAmountSet extends ethereum.Event {
  get params(): MinimumDepositAmountSet__Params {
    return new MinimumDepositAmountSet__Params(this);
  }
}

export class MinimumDepositAmountSet__Params {
  _event: MinimumDepositAmountSet;

  constructor(event: MinimumDepositAmountSet) {
    this._event = event;
  }

  get oldMinimum(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newMinimum(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MinimumRedemptionAmountSet extends ethereum.Event {
  get params(): MinimumRedemptionAmountSet__Params {
    return new MinimumRedemptionAmountSet__Params(this);
  }
}

export class MinimumRedemptionAmountSet__Params {
  _event: MinimumRedemptionAmountSet;

  constructor(event: MinimumRedemptionAmountSet) {
    this._event = event;
  }

  get oldRedemptionMin(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newRedemptionMin(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MintCompleted extends ethereum.Event {
  get params(): MintCompleted__Params {
    return new MintCompleted__Params(this);
  }
}

export class MintCompleted__Params {
  _event: MintCompleted;

  constructor(event: MintCompleted) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get depositId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get rwaAmountOut(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get collateralAmountDeposited(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get priceId(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class MintFeeSet extends ethereum.Event {
  get params(): MintFeeSet__Params {
    return new MintFeeSet__Params(this);
  }
}

export class MintFeeSet__Params {
  _event: MintFeeSet;

  constructor(event: MintFeeSet) {
    this._event = event;
  }

  get oldFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MintRequested extends ethereum.Event {
  get params(): MintRequested__Params {
    return new MintRequested__Params(this);
  }
}

export class MintRequested__Params {
  _event: MintRequested;

  constructor(event: MintRequested) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get depositId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get collateralAmountDeposited(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get depositAmountAfterFee(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get feeAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class NewPricerSet extends ethereum.Event {
  get params(): NewPricerSet__Params {
    return new NewPricerSet__Params(this);
  }
}

export class NewPricerSet__Params {
  _event: NewPricerSet;

  constructor(event: NewPricerSet) {
    this._event = event;
  }

  get oldPricer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newPricer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PriceIdSetForDeposit extends ethereum.Event {
  get params(): PriceIdSetForDeposit__Params {
    return new PriceIdSetForDeposit__Params(this);
  }
}

export class PriceIdSetForDeposit__Params {
  _event: PriceIdSetForDeposit;

  constructor(event: PriceIdSetForDeposit) {
    this._event = event;
  }

  get depositIdSet(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get priceIdSet(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PriceIdSetForRedemption extends ethereum.Event {
  get params(): PriceIdSetForRedemption__Params {
    return new PriceIdSetForRedemption__Params(this);
  }
}

export class PriceIdSetForRedemption__Params {
  _event: PriceIdSetForRedemption;

  constructor(event: PriceIdSetForRedemption) {
    this._event = event;
  }

  get redemptionIdSet(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get priceIdSet(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get collateralType(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RedeemerOverwritten extends ethereum.Event {
  get params(): RedeemerOverwritten__Params {
    return new RedeemerOverwritten__Params(this);
  }
}

export class RedeemerOverwritten__Params {
  _event: RedeemerOverwritten;

  constructor(event: RedeemerOverwritten) {
    this._event = event;
  }

  get redemptionId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get oldRedeemer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newRedeemer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get oldPriceId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get newPriceId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get oldRWATokenAmountBurned(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get newRWATokenAmountBurned(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class RedemptionApproved extends ethereum.Event {
  get params(): RedemptionApproved__Params {
    return new RedemptionApproved__Params(this);
  }
}

export class RedemptionApproved__Params {
  _event: RedemptionApproved;

  constructor(event: RedemptionApproved) {
    this._event = event;
  }

  get redemptionId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get collateralType(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class RedemptionCompleted extends ethereum.Event {
  get params(): RedemptionCompleted__Params {
    return new RedemptionCompleted__Params(this);
  }
}

export class RedemptionCompleted__Params {
  _event: RedemptionCompleted;

  constructor(event: RedemptionCompleted) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get redemptionId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get rwaAmountRequested(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get collateralAmountReturned(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get collateralType(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class RedemptionFeeSet extends ethereum.Event {
  get params(): RedemptionFeeSet__Params {
    return new RedemptionFeeSet__Params(this);
  }
}

export class RedemptionFeeSet__Params {
  _event: RedemptionFeeSet;

  constructor(event: RedemptionFeeSet) {
    this._event = event;
  }

  get oldFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RedemptionPaused extends ethereum.Event {
  get params(): RedemptionPaused__Params {
    return new RedemptionPaused__Params(this);
  }
}

export class RedemptionPaused__Params {
  _event: RedemptionPaused;

  constructor(event: RedemptionPaused) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RedemptionRequested extends ethereum.Event {
  get params(): RedemptionRequested__Params {
    return new RedemptionRequested__Params(this);
  }
}

export class RedemptionRequested__Params {
  _event: RedemptionRequested;

  constructor(event: RedemptionRequested) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get redemptionId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get rwaAmountIn(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get collateralType(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class RedemptionUnpaused extends ethereum.Event {
  get params(): RedemptionUnpaused__Params {
    return new RedemptionUnpaused__Params(this);
  }
}

export class RedemptionUnpaused__Params {
  _event: RedemptionUnpaused;

  constructor(event: RedemptionUnpaused) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SubscriptionPaused extends ethereum.Event {
  get params(): SubscriptionPaused__Params {
    return new SubscriptionPaused__Params(this);
  }
}

export class SubscriptionPaused__Params {
  _event: SubscriptionPaused;

  constructor(event: SubscriptionPaused) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SubscriptionUnpaused extends ethereum.Event {
  get params(): SubscriptionUnpaused__Params {
    return new SubscriptionUnpaused__Params(this);
  }
}

export class SubscriptionUnpaused__Params {
  _event: SubscriptionUnpaused;

  constructor(event: SubscriptionUnpaused) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class HYFManager__depositIdToDepositorResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: Address, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getUser(): Address {
    return this.value0;
  }

  getAmountDepositedMinusFees(): BigInt {
    return this.value1;
  }

  getPriceId(): BigInt {
    return this.value2;
  }
}

export class HYFManager__redemptionIdToRedeemerResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: boolean;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: BigInt,
    value3: boolean,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    return map;
  }

  getUser(): Address {
    return this.value0;
  }

  getAmountRwaTokenBurned(): BigInt {
    return this.value1;
  }

  getPriceId(): BigInt {
    return this.value2;
  }

  getApproved(): boolean {
    return this.value3;
  }
}

export class HYFManager extends ethereum.SmartContract {
  static bind(address: Address): HYFManager {
    return new HYFManager("HYFManager", address);
  }

  AUDC_TO_USDC_EXCHANGE_RATE(): BigInt {
    let result = super.call(
      "AUDC_TO_USDC_EXCHANGE_RATE",
      "AUDC_TO_USDC_EXCHANGE_RATE():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_AUDC_TO_USDC_EXCHANGE_RATE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "AUDC_TO_USDC_EXCHANGE_RATE",
      "AUDC_TO_USDC_EXCHANGE_RATE():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  BPS_DENOMINATOR(): BigInt {
    let result = super.call(
      "BPS_DENOMINATOR",
      "BPS_DENOMINATOR():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_BPS_DENOMINATOR(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "BPS_DENOMINATOR",
      "BPS_DENOMINATOR():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  COLLATERAL_TYPE(): Bytes {
    let result = super.call(
      "COLLATERAL_TYPE",
      "COLLATERAL_TYPE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_COLLATERAL_TYPE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "COLLATERAL_TYPE",
      "COLLATERAL_TYPE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  HYF_TO_USDC_CONVERSION_RATE(): BigInt {
    let result = super.call(
      "HYF_TO_USDC_CONVERSION_RATE",
      "HYF_TO_USDC_CONVERSION_RATE():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_HYF_TO_USDC_CONVERSION_RATE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "HYF_TO_USDC_CONVERSION_RATE",
      "HYF_TO_USDC_CONVERSION_RATE():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MANAGER_ADMIN(): Bytes {
    let result = super.call("MANAGER_ADMIN", "MANAGER_ADMIN():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MANAGER_ADMIN(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MANAGER_ADMIN",
      "MANAGER_ADMIN():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PAUSER_ADMIN(): Bytes {
    let result = super.call("PAUSER_ADMIN", "PAUSER_ADMIN():(bytes32)", []);

    return result[0].toBytes();
  }

  try_PAUSER_ADMIN(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("PAUSER_ADMIN", "PAUSER_ADMIN():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PRICE_ID_SETTER_ROLE(): Bytes {
    let result = super.call(
      "PRICE_ID_SETTER_ROLE",
      "PRICE_ID_SETTER_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_PRICE_ID_SETTER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "PRICE_ID_SETTER_ROLE",
      "PRICE_ID_SETTER_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  RELAYER_ROLE(): Bytes {
    let result = super.call("RELAYER_ROLE", "RELAYER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_RELAYER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("RELAYER_ROLE", "RELAYER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  TIMESTAMP_SETTER_ROLE(): Bytes {
    let result = super.call(
      "TIMESTAMP_SETTER_ROLE",
      "TIMESTAMP_SETTER_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_TIMESTAMP_SETTER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "TIMESTAMP_SETTER_ROLE",
      "TIMESTAMP_SETTER_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  assetRecipient(): Address {
    let result = super.call("assetRecipient", "assetRecipient():(address)", []);

    return result[0].toAddress();
  }

  try_assetRecipient(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "assetRecipient",
      "assetRecipient():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  assetSender(): Address {
    let result = super.call("assetSender", "assetSender():(address)", []);

    return result[0].toAddress();
  }

  try_assetSender(): ethereum.CallResult<Address> {
    let result = super.tryCall("assetSender", "assetSender():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  audcCollateral(): Address {
    let result = super.call("audcCollateral", "audcCollateral():(address)", []);

    return result[0].toAddress();
  }

  try_audcCollateral(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "audcCollateral",
      "audcCollateral():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  collateral(): Address {
    let result = super.call("collateral", "collateral():(address)", []);

    return result[0].toAddress();
  }

  try_collateral(): ethereum.CallResult<Address> {
    let result = super.tryCall("collateral", "collateral():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  decimalsMultiplier(): BigInt {
    let result = super.call(
      "decimalsMultiplier",
      "decimalsMultiplier():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_decimalsMultiplier(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "decimalsMultiplier",
      "decimalsMultiplier():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  depositIdToClaimableTimestamp(param0: Bytes): BigInt {
    let result = super.call(
      "depositIdToClaimableTimestamp",
      "depositIdToClaimableTimestamp(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );

    return result[0].toBigInt();
  }

  try_depositIdToClaimableTimestamp(
    param0: Bytes,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "depositIdToClaimableTimestamp",
      "depositIdToClaimableTimestamp(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  depositIdToDepositor(param0: Bytes): HYFManager__depositIdToDepositorResult {
    let result = super.call(
      "depositIdToDepositor",
      "depositIdToDepositor(bytes32):(address,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );

    return new HYFManager__depositIdToDepositorResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
    );
  }

  try_depositIdToDepositor(
    param0: Bytes,
  ): ethereum.CallResult<HYFManager__depositIdToDepositorResult> {
    let result = super.tryCall(
      "depositIdToDepositor",
      "depositIdToDepositor(bytes32):(address,uint256,uint256)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HYFManager__depositIdToDepositorResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
      ),
    );
  }

  feeRecipient(): Address {
    let result = super.call("feeRecipient", "feeRecipient():(address)", []);

    return result[0].toAddress();
  }

  try_feeRecipient(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeRecipient", "feeRecipient():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index),
      ],
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)],
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  minimumDepositAmount(): BigInt {
    let result = super.call(
      "minimumDepositAmount",
      "minimumDepositAmount():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_minimumDepositAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minimumDepositAmount",
      "minimumDepositAmount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minimumRedemptionAmount(): BigInt {
    let result = super.call(
      "minimumRedemptionAmount",
      "minimumRedemptionAmount():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_minimumRedemptionAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minimumRedemptionAmount",
      "minimumRedemptionAmount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  mintFee(): BigInt {
    let result = super.call("mintFee", "mintFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_mintFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("mintFee", "mintFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pricer(): Address {
    let result = super.call("pricer", "pricer():(address)", []);

    return result[0].toAddress();
  }

  try_pricer(): ethereum.CallResult<Address> {
    let result = super.tryCall("pricer", "pricer():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  redemptionFee(): BigInt {
    let result = super.call("redemptionFee", "redemptionFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_redemptionFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "redemptionFee",
      "redemptionFee():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  redemptionIdToRedeemer(
    param0: Bytes,
  ): HYFManager__redemptionIdToRedeemerResult {
    let result = super.call(
      "redemptionIdToRedeemer",
      "redemptionIdToRedeemer(bytes32):(address,uint256,uint256,bool)",
      [ethereum.Value.fromFixedBytes(param0)],
    );

    return new HYFManager__redemptionIdToRedeemerResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBoolean(),
    );
  }

  try_redemptionIdToRedeemer(
    param0: Bytes,
  ): ethereum.CallResult<HYFManager__redemptionIdToRedeemerResult> {
    let result = super.tryCall(
      "redemptionIdToRedeemer",
      "redemptionIdToRedeemer(bytes32):(address,uint256,uint256,bool)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new HYFManager__redemptionIdToRedeemerResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBoolean(),
      ),
    );
  }

  redemptionPaused(): boolean {
    let result = super.call(
      "redemptionPaused",
      "redemptionPaused():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_redemptionPaused(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "redemptionPaused",
      "redemptionPaused():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  redemptionRequestCounter(): BigInt {
    let result = super.call(
      "redemptionRequestCounter",
      "redemptionRequestCounter():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_redemptionRequestCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "redemptionRequestCounter",
      "redemptionRequestCounter():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  rwa(): Address {
    let result = super.call("rwa", "rwa():(address)", []);

    return result[0].toAddress();
  }

  try_rwa(): ethereum.CallResult<Address> {
    let result = super.tryCall("rwa", "rwa():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rwaAyf(): Address {
    let result = super.call("rwaAyf", "rwaAyf():(address)", []);

    return result[0].toAddress();
  }

  try_rwaAyf(): ethereum.CallResult<Address> {
    let result = super.tryCall("rwaAyf", "rwaAyf():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  subscriptionPaused(): boolean {
    let result = super.call(
      "subscriptionPaused",
      "subscriptionPaused():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_subscriptionPaused(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "subscriptionPaused",
      "subscriptionPaused():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  subscriptionRequestCounter(): BigInt {
    let result = super.call(
      "subscriptionRequestCounter",
      "subscriptionRequestCounter():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_subscriptionRequestCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "subscriptionRequestCounter",
      "subscriptionRequestCounter():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _collateral(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _audcCollateral(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _rwa(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _rwaAyf(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get managerAdmin(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get pauser(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _assetSender(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _feeRecipient(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get _minimumDepositAmount(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get _minimumRedemptionAmount(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }

  get blocklist(): Address {
    return this._call.inputValues[10].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddProofCall extends ethereum.Call {
  get inputs(): AddProofCall__Inputs {
    return new AddProofCall__Inputs(this);
  }

  get outputs(): AddProofCall__Outputs {
    return new AddProofCall__Outputs(this);
  }
}

export class AddProofCall__Inputs {
  _call: AddProofCall;

  constructor(call: AddProofCall) {
    this._call = call;
  }

  get txHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get depositAmountAfterFee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get feeAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class AddProofCall__Outputs {
  _call: AddProofCall;

  constructor(call: AddProofCall) {
    this._call = call;
  }
}

export class ApproveRedemptionRequestCall extends ethereum.Call {
  get inputs(): ApproveRedemptionRequestCall__Inputs {
    return new ApproveRedemptionRequestCall__Inputs(this);
  }

  get outputs(): ApproveRedemptionRequestCall__Outputs {
    return new ApproveRedemptionRequestCall__Outputs(this);
  }
}

export class ApproveRedemptionRequestCall__Inputs {
  _call: ApproveRedemptionRequestCall;

  constructor(call: ApproveRedemptionRequestCall) {
    this._call = call;
  }

  get redemptionIds(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class ApproveRedemptionRequestCall__Outputs {
  _call: ApproveRedemptionRequestCall;

  constructor(call: ApproveRedemptionRequestCall) {
    this._call = call;
  }
}

export class ClaimMintCall extends ethereum.Call {
  get inputs(): ClaimMintCall__Inputs {
    return new ClaimMintCall__Inputs(this);
  }

  get outputs(): ClaimMintCall__Outputs {
    return new ClaimMintCall__Outputs(this);
  }
}

export class ClaimMintCall__Inputs {
  _call: ClaimMintCall;

  constructor(call: ClaimMintCall) {
    this._call = call;
  }

  get depositIds(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class ClaimMintCall__Outputs {
  _call: ClaimMintCall;

  constructor(call: ClaimMintCall) {
    this._call = call;
  }
}

export class ClaimRedemptionCall extends ethereum.Call {
  get inputs(): ClaimRedemptionCall__Inputs {
    return new ClaimRedemptionCall__Inputs(this);
  }

  get outputs(): ClaimRedemptionCall__Outputs {
    return new ClaimRedemptionCall__Outputs(this);
  }
}

export class ClaimRedemptionCall__Inputs {
  _call: ClaimRedemptionCall;

  constructor(call: ClaimRedemptionCall) {
    this._call = call;
  }

  get redemptionIds(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class ClaimRedemptionCall__Outputs {
  _call: ClaimRedemptionCall;

  constructor(call: ClaimRedemptionCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class OverwriteDepositorCall extends ethereum.Call {
  get inputs(): OverwriteDepositorCall__Inputs {
    return new OverwriteDepositorCall__Inputs(this);
  }

  get outputs(): OverwriteDepositorCall__Outputs {
    return new OverwriteDepositorCall__Outputs(this);
  }
}

export class OverwriteDepositorCall__Inputs {
  _call: OverwriteDepositorCall;

  constructor(call: OverwriteDepositorCall) {
    this._call = call;
  }

  get depositIdToOverwrite(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get depositAmountAfterFee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get priceId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class OverwriteDepositorCall__Outputs {
  _call: OverwriteDepositorCall;

  constructor(call: OverwriteDepositorCall) {
    this._call = call;
  }
}

export class OverwriteRedeemerCall extends ethereum.Call {
  get inputs(): OverwriteRedeemerCall__Inputs {
    return new OverwriteRedeemerCall__Inputs(this);
  }

  get outputs(): OverwriteRedeemerCall__Outputs {
    return new OverwriteRedeemerCall__Outputs(this);
  }
}

export class OverwriteRedeemerCall__Inputs {
  _call: OverwriteRedeemerCall;

  constructor(call: OverwriteRedeemerCall) {
    this._call = call;
  }

  get redemptionIdToOverwrite(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get rwaTokenAmountBurned(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get priceId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class OverwriteRedeemerCall__Outputs {
  _call: OverwriteRedeemerCall;

  constructor(call: OverwriteRedeemerCall) {
    this._call = call;
  }
}

export class PauseRedemptionCall extends ethereum.Call {
  get inputs(): PauseRedemptionCall__Inputs {
    return new PauseRedemptionCall__Inputs(this);
  }

  get outputs(): PauseRedemptionCall__Outputs {
    return new PauseRedemptionCall__Outputs(this);
  }
}

export class PauseRedemptionCall__Inputs {
  _call: PauseRedemptionCall;

  constructor(call: PauseRedemptionCall) {
    this._call = call;
  }
}

export class PauseRedemptionCall__Outputs {
  _call: PauseRedemptionCall;

  constructor(call: PauseRedemptionCall) {
    this._call = call;
  }
}

export class PauseSubscriptionCall extends ethereum.Call {
  get inputs(): PauseSubscriptionCall__Inputs {
    return new PauseSubscriptionCall__Inputs(this);
  }

  get outputs(): PauseSubscriptionCall__Outputs {
    return new PauseSubscriptionCall__Outputs(this);
  }
}

export class PauseSubscriptionCall__Inputs {
  _call: PauseSubscriptionCall;

  constructor(call: PauseSubscriptionCall) {
    this._call = call;
  }
}

export class PauseSubscriptionCall__Outputs {
  _call: PauseSubscriptionCall;

  constructor(call: PauseSubscriptionCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RequestRedemptionCall extends ethereum.Call {
  get inputs(): RequestRedemptionCall__Inputs {
    return new RequestRedemptionCall__Inputs(this);
  }

  get outputs(): RequestRedemptionCall__Outputs {
    return new RequestRedemptionCall__Outputs(this);
  }
}

export class RequestRedemptionCall__Inputs {
  _call: RequestRedemptionCall;

  constructor(call: RequestRedemptionCall) {
    this._call = call;
  }

  get ayfAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RequestRedemptionCall__Outputs {
  _call: RequestRedemptionCall;

  constructor(call: RequestRedemptionCall) {
    this._call = call;
  }
}

export class RequestSubscriptionCall extends ethereum.Call {
  get inputs(): RequestSubscriptionCall__Inputs {
    return new RequestSubscriptionCall__Inputs(this);
  }

  get outputs(): RequestSubscriptionCall__Outputs {
    return new RequestSubscriptionCall__Outputs(this);
  }
}

export class RequestSubscriptionCall__Inputs {
  _call: RequestSubscriptionCall;

  constructor(call: RequestSubscriptionCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RequestSubscriptionCall__Outputs {
  _call: RequestSubscriptionCall;

  constructor(call: RequestSubscriptionCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetAssetSenderCall extends ethereum.Call {
  get inputs(): SetAssetSenderCall__Inputs {
    return new SetAssetSenderCall__Inputs(this);
  }

  get outputs(): SetAssetSenderCall__Outputs {
    return new SetAssetSenderCall__Outputs(this);
  }
}

export class SetAssetSenderCall__Inputs {
  _call: SetAssetSenderCall;

  constructor(call: SetAssetSenderCall) {
    this._call = call;
  }

  get newAssetSender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAssetSenderCall__Outputs {
  _call: SetAssetSenderCall;

  constructor(call: SetAssetSenderCall) {
    this._call = call;
  }
}

export class SetClaimableTimestampCall extends ethereum.Call {
  get inputs(): SetClaimableTimestampCall__Inputs {
    return new SetClaimableTimestampCall__Inputs(this);
  }

  get outputs(): SetClaimableTimestampCall__Outputs {
    return new SetClaimableTimestampCall__Outputs(this);
  }
}

export class SetClaimableTimestampCall__Inputs {
  _call: SetClaimableTimestampCall;

  constructor(call: SetClaimableTimestampCall) {
    this._call = call;
  }

  get claimTimestamp(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get depositIds(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }
}

export class SetClaimableTimestampCall__Outputs {
  _call: SetClaimableTimestampCall;

  constructor(call: SetClaimableTimestampCall) {
    this._call = call;
  }
}

export class SetFeeRecipientCall extends ethereum.Call {
  get inputs(): SetFeeRecipientCall__Inputs {
    return new SetFeeRecipientCall__Inputs(this);
  }

  get outputs(): SetFeeRecipientCall__Outputs {
    return new SetFeeRecipientCall__Outputs(this);
  }
}

export class SetFeeRecipientCall__Inputs {
  _call: SetFeeRecipientCall;

  constructor(call: SetFeeRecipientCall) {
    this._call = call;
  }

  get newFeeRecipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeRecipientCall__Outputs {
  _call: SetFeeRecipientCall;

  constructor(call: SetFeeRecipientCall) {
    this._call = call;
  }
}

export class SetMinimumDepositAmountCall extends ethereum.Call {
  get inputs(): SetMinimumDepositAmountCall__Inputs {
    return new SetMinimumDepositAmountCall__Inputs(this);
  }

  get outputs(): SetMinimumDepositAmountCall__Outputs {
    return new SetMinimumDepositAmountCall__Outputs(this);
  }
}

export class SetMinimumDepositAmountCall__Inputs {
  _call: SetMinimumDepositAmountCall;

  constructor(call: SetMinimumDepositAmountCall) {
    this._call = call;
  }

  get minDepositAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinimumDepositAmountCall__Outputs {
  _call: SetMinimumDepositAmountCall;

  constructor(call: SetMinimumDepositAmountCall) {
    this._call = call;
  }
}

export class SetMinimumRedemptionAmountCall extends ethereum.Call {
  get inputs(): SetMinimumRedemptionAmountCall__Inputs {
    return new SetMinimumRedemptionAmountCall__Inputs(this);
  }

  get outputs(): SetMinimumRedemptionAmountCall__Outputs {
    return new SetMinimumRedemptionAmountCall__Outputs(this);
  }
}

export class SetMinimumRedemptionAmountCall__Inputs {
  _call: SetMinimumRedemptionAmountCall;

  constructor(call: SetMinimumRedemptionAmountCall) {
    this._call = call;
  }

  get _minimumRedemptionAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinimumRedemptionAmountCall__Outputs {
  _call: SetMinimumRedemptionAmountCall;

  constructor(call: SetMinimumRedemptionAmountCall) {
    this._call = call;
  }
}

export class SetMintFeeCall extends ethereum.Call {
  get inputs(): SetMintFeeCall__Inputs {
    return new SetMintFeeCall__Inputs(this);
  }

  get outputs(): SetMintFeeCall__Outputs {
    return new SetMintFeeCall__Outputs(this);
  }
}

export class SetMintFeeCall__Inputs {
  _call: SetMintFeeCall;

  constructor(call: SetMintFeeCall) {
    this._call = call;
  }

  get _mintFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMintFeeCall__Outputs {
  _call: SetMintFeeCall;

  constructor(call: SetMintFeeCall) {
    this._call = call;
  }
}

export class SetPriceIdForDepositsCall extends ethereum.Call {
  get inputs(): SetPriceIdForDepositsCall__Inputs {
    return new SetPriceIdForDepositsCall__Inputs(this);
  }

  get outputs(): SetPriceIdForDepositsCall__Outputs {
    return new SetPriceIdForDepositsCall__Outputs(this);
  }
}

export class SetPriceIdForDepositsCall__Inputs {
  _call: SetPriceIdForDepositsCall;

  constructor(call: SetPriceIdForDepositsCall) {
    this._call = call;
  }

  get depositIds(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get priceIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetPriceIdForDepositsCall__Outputs {
  _call: SetPriceIdForDepositsCall;

  constructor(call: SetPriceIdForDepositsCall) {
    this._call = call;
  }
}

export class SetPriceIdForRedemptionsCall extends ethereum.Call {
  get inputs(): SetPriceIdForRedemptionsCall__Inputs {
    return new SetPriceIdForRedemptionsCall__Inputs(this);
  }

  get outputs(): SetPriceIdForRedemptionsCall__Outputs {
    return new SetPriceIdForRedemptionsCall__Outputs(this);
  }
}

export class SetPriceIdForRedemptionsCall__Inputs {
  _call: SetPriceIdForRedemptionsCall;

  constructor(call: SetPriceIdForRedemptionsCall) {
    this._call = call;
  }

  get redemptionIds(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get priceIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class SetPriceIdForRedemptionsCall__Outputs {
  _call: SetPriceIdForRedemptionsCall;

  constructor(call: SetPriceIdForRedemptionsCall) {
    this._call = call;
  }
}

export class SetPricerCall extends ethereum.Call {
  get inputs(): SetPricerCall__Inputs {
    return new SetPricerCall__Inputs(this);
  }

  get outputs(): SetPricerCall__Outputs {
    return new SetPricerCall__Outputs(this);
  }
}

export class SetPricerCall__Inputs {
  _call: SetPricerCall;

  constructor(call: SetPricerCall) {
    this._call = call;
  }

  get newPricer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPricerCall__Outputs {
  _call: SetPricerCall;

  constructor(call: SetPricerCall) {
    this._call = call;
  }
}

export class SetRedemptionFeeCall extends ethereum.Call {
  get inputs(): SetRedemptionFeeCall__Inputs {
    return new SetRedemptionFeeCall__Inputs(this);
  }

  get outputs(): SetRedemptionFeeCall__Outputs {
    return new SetRedemptionFeeCall__Outputs(this);
  }
}

export class SetRedemptionFeeCall__Inputs {
  _call: SetRedemptionFeeCall;

  constructor(call: SetRedemptionFeeCall) {
    this._call = call;
  }

  get _redemptionFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetRedemptionFeeCall__Outputs {
  _call: SetRedemptionFeeCall;

  constructor(call: SetRedemptionFeeCall) {
    this._call = call;
  }
}

export class UnpauseRedemptionCall extends ethereum.Call {
  get inputs(): UnpauseRedemptionCall__Inputs {
    return new UnpauseRedemptionCall__Inputs(this);
  }

  get outputs(): UnpauseRedemptionCall__Outputs {
    return new UnpauseRedemptionCall__Outputs(this);
  }
}

export class UnpauseRedemptionCall__Inputs {
  _call: UnpauseRedemptionCall;

  constructor(call: UnpauseRedemptionCall) {
    this._call = call;
  }
}

export class UnpauseRedemptionCall__Outputs {
  _call: UnpauseRedemptionCall;

  constructor(call: UnpauseRedemptionCall) {
    this._call = call;
  }
}

export class UnpauseSubscriptionCall extends ethereum.Call {
  get inputs(): UnpauseSubscriptionCall__Inputs {
    return new UnpauseSubscriptionCall__Inputs(this);
  }

  get outputs(): UnpauseSubscriptionCall__Outputs {
    return new UnpauseSubscriptionCall__Outputs(this);
  }
}

export class UnpauseSubscriptionCall__Inputs {
  _call: UnpauseSubscriptionCall;

  constructor(call: UnpauseSubscriptionCall) {
    this._call = call;
  }
}

export class UnpauseSubscriptionCall__Outputs {
  _call: UnpauseSubscriptionCall;

  constructor(call: UnpauseSubscriptionCall) {
    this._call = call;
  }
}
