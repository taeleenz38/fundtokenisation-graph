// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AccountAddedFromSignature extends ethereum.Event {
  get params(): AccountAddedFromSignature__Params {
    return new AccountAddedFromSignature__Params(this);
  }
}

export class AccountAddedFromSignature__Params {
  _event: AccountAddedFromSignature;

  constructor(event: AccountAddedFromSignature) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get termIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get v(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get r(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get s(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class AccountAddedSelf extends ethereum.Event {
  get params(): AccountAddedSelf__Params {
    return new AccountAddedSelf__Params(this);
  }
}

export class AccountAddedSelf__Params {
  _event: AccountAddedSelf;

  constructor(event: AccountAddedSelf) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get termIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AccountStatusSet extends ethereum.Event {
  get params(): AccountStatusSet__Params {
    return new AccountStatusSet__Params(this);
  }
}

export class AccountStatusSet__Params {
  _event: AccountStatusSet;

  constructor(event: AccountStatusSet) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get termIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get status(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class AccountStatusSetByAdmin extends ethereum.Event {
  get params(): AccountStatusSetByAdmin__Params {
    return new AccountStatusSetByAdmin__Params(this);
  }
}

export class AccountStatusSetByAdmin__Params {
  _event: AccountStatusSetByAdmin;

  constructor(event: AccountStatusSetByAdmin) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get termIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get status(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class CurrentTermIndexSet extends ethereum.Event {
  get params(): CurrentTermIndexSet__Params {
    return new CurrentTermIndexSet__Params(this);
  }
}

export class CurrentTermIndexSet__Params {
  _event: CurrentTermIndexSet;

  constructor(event: CurrentTermIndexSet) {
    this._event = event;
  }

  get oldIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TermAdded extends ethereum.Event {
  get params(): TermAdded__Params {
    return new TermAdded__Params(this);
  }
}

export class TermAdded__Params {
  _event: TermAdded;

  constructor(event: TermAdded) {
    this._event = event;
  }

  get hashedMessage(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get termIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ValidTermIndexesSet extends ethereum.Event {
  get params(): ValidTermIndexesSet__Params {
    return new ValidTermIndexesSet__Params(this);
  }
}

export class ValidTermIndexesSet__Params {
  _event: ValidTermIndexesSet;

  constructor(event: ValidTermIndexesSet) {
    this._event = event;
  }

  get oldIndexes(): Array<BigInt> {
    return this._event.parameters[0].value.toBigIntArray();
  }

  get newIndexes(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class AllowlistUpgradeable extends ethereum.SmartContract {
  static bind(address: Address): AllowlistUpgradeable {
    return new AllowlistUpgradeable("AllowlistUpgradeable", address);
  }

  ALLOWLIST_ADMIN(): Bytes {
    let result = super.call(
      "ALLOWLIST_ADMIN",
      "ALLOWLIST_ADMIN():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_ALLOWLIST_ADMIN(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ALLOWLIST_ADMIN",
      "ALLOWLIST_ADMIN():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ALLOWLIST_SETTER(): Bytes {
    let result = super.call(
      "ALLOWLIST_SETTER",
      "ALLOWLIST_SETTER():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_ALLOWLIST_SETTER(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ALLOWLIST_SETTER",
      "ALLOWLIST_SETTER():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  currentTermIndex(): BigInt {
    let result = super.call(
      "currentTermIndex",
      "currentTermIndex():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_currentTermIndex(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentTermIndex",
      "currentTermIndex():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCurrentTerm(): string {
    let result = super.call("getCurrentTerm", "getCurrentTerm():(string)", []);

    return result[0].toString();
  }

  try_getCurrentTerm(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getCurrentTerm",
      "getCurrentTerm():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index),
      ],
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)],
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getValidTermIndexes(): Array<BigInt> {
    let result = super.call(
      "getValidTermIndexes",
      "getValidTermIndexes():(uint256[])",
      [],
    );

    return result[0].toBigIntArray();
  }

  try_getValidTermIndexes(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getValidTermIndexes",
      "getValidTermIndexes():(uint256[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isAllowed(account: Address): boolean {
    let result = super.call("isAllowed", "isAllowed(address):(bool)", [
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_isAllowed(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isAllowed", "isAllowed(address):(bool)", [
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  terms(param0: BigInt): string {
    let result = super.call("terms", "terms(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return result[0].toString();
  }

  try_terms(param0: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("terms", "terms(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  validIndexes(param0: BigInt): BigInt {
    let result = super.call("validIndexes", "validIndexes(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return result[0].toBigInt();
  }

  try_validIndexes(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "validIndexes",
      "validIndexes(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  verifications(param0: Address, param1: BigInt): boolean {
    let result = super.call(
      "verifications",
      "verifications(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );

    return result[0].toBoolean();
  }

  try_verifications(
    param0: Address,
    param1: BigInt,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "verifications",
      "verifications(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddAccountToAllowlistCall extends ethereum.Call {
  get inputs(): AddAccountToAllowlistCall__Inputs {
    return new AddAccountToAllowlistCall__Inputs(this);
  }

  get outputs(): AddAccountToAllowlistCall__Outputs {
    return new AddAccountToAllowlistCall__Outputs(this);
  }
}

export class AddAccountToAllowlistCall__Inputs {
  _call: AddAccountToAllowlistCall;

  constructor(call: AddAccountToAllowlistCall) {
    this._call = call;
  }

  get termIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get v(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class AddAccountToAllowlistCall__Outputs {
  _call: AddAccountToAllowlistCall;

  constructor(call: AddAccountToAllowlistCall) {
    this._call = call;
  }
}

export class AddSelfToAllowlistCall extends ethereum.Call {
  get inputs(): AddSelfToAllowlistCall__Inputs {
    return new AddSelfToAllowlistCall__Inputs(this);
  }

  get outputs(): AddSelfToAllowlistCall__Outputs {
    return new AddSelfToAllowlistCall__Outputs(this);
  }
}

export class AddSelfToAllowlistCall__Inputs {
  _call: AddSelfToAllowlistCall;

  constructor(call: AddSelfToAllowlistCall) {
    this._call = call;
  }

  get termIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AddSelfToAllowlistCall__Outputs {
  _call: AddSelfToAllowlistCall;

  constructor(call: AddSelfToAllowlistCall) {
    this._call = call;
  }
}

export class AddTermCall extends ethereum.Call {
  get inputs(): AddTermCall__Inputs {
    return new AddTermCall__Inputs(this);
  }

  get outputs(): AddTermCall__Outputs {
    return new AddTermCall__Outputs(this);
  }
}

export class AddTermCall__Inputs {
  _call: AddTermCall;

  constructor(call: AddTermCall) {
    this._call = call;
  }

  get term(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddTermCall__Outputs {
  _call: AddTermCall;

  constructor(call: AddTermCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get setter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetAccountStatusCall extends ethereum.Call {
  get inputs(): SetAccountStatusCall__Inputs {
    return new SetAccountStatusCall__Inputs(this);
  }

  get outputs(): SetAccountStatusCall__Outputs {
    return new SetAccountStatusCall__Outputs(this);
  }
}

export class SetAccountStatusCall__Inputs {
  _call: SetAccountStatusCall;

  constructor(call: SetAccountStatusCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get termIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get status(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class SetAccountStatusCall__Outputs {
  _call: SetAccountStatusCall;

  constructor(call: SetAccountStatusCall) {
    this._call = call;
  }
}

export class SetCurrentTermIndexCall extends ethereum.Call {
  get inputs(): SetCurrentTermIndexCall__Inputs {
    return new SetCurrentTermIndexCall__Inputs(this);
  }

  get outputs(): SetCurrentTermIndexCall__Outputs {
    return new SetCurrentTermIndexCall__Outputs(this);
  }
}

export class SetCurrentTermIndexCall__Inputs {
  _call: SetCurrentTermIndexCall;

  constructor(call: SetCurrentTermIndexCall) {
    this._call = call;
  }

  get _currentTermIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCurrentTermIndexCall__Outputs {
  _call: SetCurrentTermIndexCall;

  constructor(call: SetCurrentTermIndexCall) {
    this._call = call;
  }
}

export class SetValidTermIndexesCall extends ethereum.Call {
  get inputs(): SetValidTermIndexesCall__Inputs {
    return new SetValidTermIndexesCall__Inputs(this);
  }

  get outputs(): SetValidTermIndexesCall__Outputs {
    return new SetValidTermIndexesCall__Outputs(this);
  }
}

export class SetValidTermIndexesCall__Inputs {
  _call: SetValidTermIndexesCall;

  constructor(call: SetValidTermIndexesCall) {
    this._call = call;
  }

  get _validIndexes(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class SetValidTermIndexesCall__Outputs {
  _call: SetValidTermIndexesCall;

  constructor(call: SetValidTermIndexesCall) {
    this._call = call;
  }
}
